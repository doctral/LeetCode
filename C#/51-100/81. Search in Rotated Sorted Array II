public class Solution {
    public bool Search(int[] nums, int target) {
        int left=0, right=nums.Length-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]==target) return true;
            if(nums[mid]>nums[left]){ // left side is sorted
                if(nums[mid]>target && target>=nums[left]){  // it's possible in left side
                    right=mid-1;
                }
                else{  // it's not in left side
                    left=mid+1;
                }
            }
            else if(nums[left]>nums[mid]){ // right side is sorted
                if(target>nums[mid] && nums[right]>=target){ // it's possible in sorted side, right
                    left=mid+1;
                }              
                else{  // it's possible in unsorted left side
                    right=mid-1;
                }
            }
            else{  // nums[left]==nums[mid] and nums[mid]!=target, so we can exclude nums[left]
                left++;
            }
        }
        return false;
            
    }
}