public class Solution {
    public bool IsValidSudoku(char[,] board) {
        // check row
        for(int i=0; i<board.GetLength(0); i++){
            int[] temp=new int[9];
            for(int j=0; j<board.GetLength(1); j++){
                if(board[i,j]!='.'){
                    int idx=board[i,j]-'1';
                    temp[idx]=temp[idx]+1;
                    if(temp[idx]>1) return false;
                }
            }
        }
        // check column
        for(int i=0; i<board.GetLength(1); i++){
            int[] temp=new int[9];
            for(int j=0; j<board.GetLength(0); j++){
                if(board[j,i]!='.'){
                    int idx=board[j,i]-'1';
                    temp[idx]=temp[idx]+1;
                    if(temp[idx]>1) return false;
                }
            }
        }
        // check grid
        for(int i=0; i<board.GetLength(0); i=i+3){
            for(int j=0; j<board.GetLength(1); j=j+3){
                int[] temp=new int[9];
                for(int m=0; m<3; m++){
                    for(int n=0; n<3; n++){
                        if(board[i+m,j+n]!='.'){
                            int idx=board[i+m, j+n]-'1';
                            temp[idx]=temp[idx]+1;
                            if(temp[idx]>1) return false;
                        }
                    }
                }
            }
        }
        return true;
        
    }
}