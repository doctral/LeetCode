public class Solution {
    public IList<string> GenerateParenthesis(int n) {
        IList<string> res=new List<string>();
        if(n<=0) return res;
        DFS(res, "", n, n);
        return res;
    }
    private void DFS(IList<string> res, string curr, int open, int close){
        if(open==0 && close ==0 ){
            res.Add(curr);
        }
        else{
            if(open>0){
                DFS(res, curr+'(', open-1, close);
            }
            if(close>open){
                DFS(res, curr+')', open, close-1);
            }
        }
    }
}