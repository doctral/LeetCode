Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 19 is a happy number

12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
###############################################################################################
The key point is to check if it's endless. 
1. An easy way to do so is to use a hashset.
2. We can also use the same that check the loop of linkedlist.

class Solution {
    public boolean isHappy(int n) {
        int slow=n, fast=n;
        do{
            slow=squareSum(slow);
            fast=squareSum(fast);
            fast=squareSum(fast);
        }while(fast!=slow);
        if(slow==1) return true;
        return false;
    }
    private int squareSum(int n){
        int sum=0;
        while(n>0){
            int re=n%10;
            sum+=re*re;
            n=n/10;
        }
        return sum;
    }
}