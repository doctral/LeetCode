Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.
#####################################################################################################
The key point is here, it is > [n/2] times. Therefore, if there are 4 or 5 elements, then the 
majority element must appear more than 2 times, means at least 3 times.
Therefore, we can use moore voting algorithm as following:
class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length; 
        int count=1, major=nums[0];
        for(int i=1; i<n; i++){
            if(nums[i]==major){
                count++;
            }
            else count--;
            if(count==0){
                major=nums[i];
                count++;
            }
        }
        return major;
    }
}

This algorithm works when the majority number always exist. Otherwise, we cannot use this approach.
Think about this, 1,2,3,4,5,5,6,7,7,7 There is no majority element.