Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.
########################################################################################################################
class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] strs=str.split(" ");
        if(pattern.length()!=strs.length) return false;
        Map<Character, String> map=new HashMap<>();
        Set<String> set=new HashSet<>();
        for(int i=0; i<strs.length; i++){
            char ch=pattern.charAt(i);
            String ss=strs[i];
            if(map.containsKey(ch)){
                if(!map.get(ch).equals(ss)) return false;
            }
            else{
                if(!set.add(ss)) return false;
                map.put(ch,ss);
            }
        }
        return true;
    }
}
