Say you have an array for which the ith element is the price of a given stock on day i.

If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.

Example 1:
Input: [7, 1, 5, 3, 6, 4]
Output: 5

max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)
Example 2:
Input: [7, 6, 4, 3, 1]
Output: 0

In this case, no transaction is done, i.e. max profit = 0.

#################################################################################################
Idea: from the left side, we find the min value up to now, and then if current price > min, then we 
check if the difference is the max.

################################################################################################
Q122: Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).
#####################################################################################################
Since we can do multiple transactions, they simply add all possible profits.

###############################################################################################3
Q123:
Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete at most two transactions.

Note:
You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).
#####################################################################################################
Since we can do at most two transactions, we first store the max profits from left to right as an array.
Then we check from right to left and calculate the max profit we can get from this side.
if rightMax+firstMax>max, then update max.