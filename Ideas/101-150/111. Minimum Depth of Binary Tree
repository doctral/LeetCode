Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the 
nearest leaf node.
################################################################################################
The key point is to understand the concept of minimum depth, otherwise, it is easy to make mistake.
The minimum depth is the shortest path from the root to a leaf node. It is the height of the first 
leaf node from root to leaf.

The code is as following:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if(root==null) return 0;
        if(root.right==null) return minDepth(root.left)+1;
        if(root.left==null) return minDepth(root.right)+1;
        return Math.min(minDepth(root.left), minDepth(root.right))+1;
    }
}