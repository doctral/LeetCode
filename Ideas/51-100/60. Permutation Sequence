The set [1,2,3,...,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note:

Given n will be between 1 and 9 inclusive.
Given k will be between 1 and n! inclusive.
Example 1:

Input: n = 3, k = 3
Output: "213"
Example 2:

Input: n = 4, k = 9
Output: "2314"

###########################################################################
Key points to solve this problem:
1. from highest significant digit to lowest significant digit, each has (n-i)! possibilities, where i=1, 2, ..., n
    Therefore, we can use an array to record the possibilities at each digit.

        int[] factorial=new int[n+1];
        factorial[0]=1;
        for(int i=1; i<=n; i++){
            factorial[i]=i*factorial[i-1];
        }
2.  from 1 to n, each digit can be used only once. 

        IList<int> nums=new List<int>();
        for(int i=0; i<n; i++){
            nums.Add(i+1);
        }
3. k=k-1; to get the correct index

4. We can get the correct digit each time using k/factorial[n-i], then we can get the digit from array using the index.
    After that, we need to remove the used digit from array so that the order of array maintained.

            k=k-1;
        for(int i=1; i<=n; i++){
            int index=k/factorial[n-i];
            sb.Append(nums[index]);
            nums.RemoveAt(index);
            k=k%factorial[n-i];
        }