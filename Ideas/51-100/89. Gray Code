The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

00 - 0
01 - 1
11 - 3
10 - 2
######################################################################################################
This problem can be solved very quickly by using a trick.
when n==0, list res={0}
when n==1, res={0,1}
when n==2, res={00,01, 11, 10}
and so on

The thing is here, from f(n-1) t0 f(n), the first part of f(n) would be exactly the same as f(n-1), 
and the last half part of f(n) is the reverse ordered f(n-1)+ (1<<(n-1) ).
Therefore, when we need to calculate f(n), based on f(n-1), we simply add another half to the list
by adding the reverse ordered f(n-1)+ 1<<n-1 
