Given an array with n objects colored red, white or blue, sort them so that objects of the same color 
are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note:
You are not suppose to use the library's sort function for this problem.
############################################################################################
Method 1: count each color at first, and then set the right color at each index
Method 2: use left side to store 0, and the right side to store 2, just one pass.
          Each time, when swap happens, we check this index again.
public class Solution {
    public void sortColors(int[] nums) {
        int left=0, right=nums.length-1;
        for(int i=0; i<=right; i++){
            if(nums[i]==0 && i>left){
                nums[i--]=nums[left];
                nums[left++]=0;
            }
            else if(nums[i]==2 && i<right){
                nums[i--]=nums[right];
                nums[right--]=2;
            }
        }
    }
}