Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.

#######################################################################
1. Brute Force Approach:

  public int[] twoSum(int[] nums, int target) {
        int[] sol=new int[2];
        
        for(int i=0; i<nums.length-1; i++){
            for(int j=i+1; j<nums.length; j++){
                int sum=nums[i]+nums[j];
                if(sum==target){
                    sol[0]=i;
                    sol[1]=j;
                }
            }
        }
        
        return sol;
    }
    
2. Hash table approach

public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map=new HashMap<>();
        int[] sol=new int[2];
        for(int i=0; i<nums.length; i++){
            map.put(nums[i], i);
        }
        for(int i=0; i<nums.length; i++){
            int complement=target-nums[i];
            if(map.containsKey(complement) &&map.get(complement)!= i){
                sol[0]=i;
                sol[1]=map.get(complement);
            }
        }
        
        return sol;
        
    }
