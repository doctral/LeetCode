public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        Stack<List<Integer>> stack=new Stack<>();
        List<List<Integer>> res=new ArrayList<>();
        if(root==null) return res;
        Queue<TreeNode> curr=new LinkedList<>();
        curr.add(root);
        while(curr.size()>0){
            Queue<TreeNode> next=new LinkedList<>();
            List<Integer> temp=new ArrayList<>();
            while(curr.size()>0){
                TreeNode node=curr.remove();
                temp.add(node.val);
                if(node.left!=null) next.add(node.left);
                if(node.right!=null) next.add(node.right);
            }
            stack.push(temp);
            curr=next;
        }
        while(!stack.isEmpty()){
            res.add(stack.pop());
        }
        return res;
    }
}
