public class Solution {
    boolean[][] visited;
    int nums=0;
    public int numIslands(char[][] grid) {
        if(grid.length<1 || grid[0].length<1) return 0;
        visited=new boolean[grid.length][grid[0].length];
        for(int i=0; i<grid.length; i++){
            for(int j=0; j<grid[0].length; j++){
                if(!visited[i][j] && grid[i][j]=='1'){
                    nums++;
                    dfs(grid,i,j);
                }
            }
        }
        return nums;
    }
    private void dfs(char[][] grid, int i, int j){
        if(i>=grid.length || j>=grid[0].length || i<0 || j<0 || grid[i][j]=='0' || visited[i][j]) return;
        if(grid[i][j]=='1'){
            visited[i][j]=true;
            dfs(grid,i+1,j);
            dfs(grid,i-1,j);
            dfs(grid,i,j-1);
            dfs(grid,i,j+1);
        }
    }
}
