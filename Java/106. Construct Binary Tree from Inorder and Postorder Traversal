/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    private int[] inorder;
    private TreeNode root;
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        this.inorder=inorder;
        HashMap<Integer, Integer> map=new HashMap<>();
        for(int i=0; i<inorder.length; i++){
            map.put(inorder[i],i);
        }
        for(int i=postorder.length-1; i>=0; i--){
            insert(map.get(postorder[i]));
        }
        settle(root);
        return root;
    }
    private void insert(int val){
        if(root==null){
            root=new TreeNode(val);
        }
        else{
            insert(root, val);
        }
    }
    private void insert(TreeNode root, int num){
        if(num<root.val){
            if(root.left==null){
                root.left=new TreeNode(num);
            }
            else{
                insert(root.left, num);
            }
        }
        else{
            if(root.right==null){
                root.right=new TreeNode(num);
            }
            else{
                insert(root.right,num);
            }
        }
    }
    private void settle(TreeNode root){
        if(root!=null){
            root.val=inorder[root.val];
            settle(root.left);
            settle(root.right);
        }
    }
}
