public class Solution {
    public int countArrangement(int N) {
        boolean[] used=new boolean[N+1];
        List<List<Integer>> res=new ArrayList<>();
        backtrack(res, used, new ArrayList<>());
        return res.size();
    }
    private void backtrack(List<List<Integer>> res, boolean[] used, List<Integer> temp){
        if(temp.size()==used.length-1){
            res.add(new ArrayList<>(temp));
        }
        else{
            for(int i=1; i<used.length; i++){
                if(used[i]) continue;
                int index=temp.size()+1;
                int num=i;
                if(index%num==0 || num%index==0){
                    used[i]=true;
                    temp.add(num);
                    backtrack(res, used, temp);
                    used[i]=false;
                    temp.remove(temp.size()-1);
                }
            }
        }
    }
}
