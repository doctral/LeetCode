public class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> res=new ArrayList<>();
        int index=0;
        while(index<words.length){
            StringBuilder sb=new StringBuilder();
            List<String> temp=new ArrayList<>();
            temp.add(words[index]);
            int max=maxWidth-words[index].length();
            index++;
            while(index<words.length && (max>=words[index].length()+1) ){
                temp.add(words[index]);
                max=max-words[index].length()-1;
                index++;
            }
            // last line
            if(index==words.length ||temp.size()==1){
                for(int i=0; i<temp.size(); i++){
                    if(i>0) sb.append(" ");
                    sb.append(temp.get(i));
                }
                while(max>0){
                    sb.append(" ");
                    max--;
                }
            }
            else{
                // figure out the length of white spaces
                int[] spaces=new int[temp.size()-1];
                for(int i=0; i<spaces.length; i++){
                    if(i<(max%spaces.length)){
                        spaces[i]=(max/spaces.length)+2;
                    }
                    else{
                        spaces[i]=(max/spaces.length)+1;
                    }
                }
                sb.append(temp.get(0));
                for(int i=1; i<temp.size(); i++){
                    while(spaces[i-1]>0){
                        sb.append(" ");
                        spaces[i-1]=spaces[i-1]-1;
                    }
                    sb.append(temp.get(i));
                }
            }
            res.add(new String(sb.toString()));
        }
        return res;
        
    }
}
