#############################Naive Method ###################################
public class Solution {
    public int reverse(int x) {
        
        int flag=1;
        if(x<0){
            x=x*(-1);
            flag=-1;
        }
        
        String str=Integer.toString(x);
        
        int len=str.length();
        String inverse="";
        for(int i=len-1; i>=0; i--){
            inverse+=str.charAt(i);
        }
        
        try{
            int num=Integer.parseInt(inverse)*flag;
            return num;
        }
        catch(Exception e){
            return 0;
        }
        
    }
}

###############################################Better way ########################################
public class Solution {
    public int reverse(int x) {
        
        int flag=1;
        if(x<0){
            x=x*(-1);
            flag=-1;
        }
        
        int inverse=0;
        
        while(x>0){
            int mod=x%10;
            x=x/10;
            inverse=inverse*10+mod;
            if(inverse>0){
                 if (x>0 && Integer.MAX_VALUE/inverse < 10){
                      return 0;
                 }
            }
        }
        return inverse*flag;
        

        
        // return inverse*flag;
        
    }
}
