public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res=new ArrayList<>();
        backtrack(res, root, sum, new ArrayList<>());
        return res;
    }
    private void backtrack(List<List<Integer>> res, TreeNode root, int sum, List<Integer> temp){
        if(root!=null){
            temp.add(root.val);
            if(root.left==null && root.right==null && sum==root.val){
                res.add(new ArrayList<>(temp));
            }
            else{
                if(root.left!=null) {
                    backtrack(res, root.left, sum-root.val, temp);
                    temp.remove(temp.size()-1);
                }
                if(root.right!=null) {
                    backtrack(res, root.right, sum-root.val, temp);
                    temp.remove(temp.size()-1);
                }
            }
        }
    
    }
}
