public class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix.length==0) return 0;
        if(matrix[0].length==0) return 0;
        int row=matrix.length, col=matrix[0].length;
        int max=0;
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(matrix[i][j]=='1'){
                    max=Math.max(max, getArea(matrix, i, j));
                }
            } 
        }
        return max;
        
    }
    int getArea(char[][] matrix, int row, int col){
        int length=0, width=0, area=1;
        for(int i=row; i<matrix.length; i++){
            if(matrix[i][col]=='1') width++;
            else{
                break;
            }
        }
        for(int j=col; j<matrix[0].length; j++){
            if(matrix[row][j]=='1'){
                length++;
            }
            else{
                break;
            }
        }
        if(length==1 || width==1){
            return length*width;
        }
        else{
            area=validArea(matrix, row, col, length, width);
        }
        return area;
    }
    int validArea(char[][] matrix, int row, int col, int length, int width){
        if(valid(matrix, row, col, length, width)) return length*width;
        else{
            return Math.max(validArea(matrix, row, col, length-1, width), validArea(matrix, row, col, length, width-1));
        }
    }
    boolean valid(char[][] matrix, int row, int col, int length, int width){
        for(int i=row; i<row+width; i++){
            for(int j=col; j<col+length; j++){
                if(matrix[i][j]=='0') return false;
            }
        }
        return true;
    }
}
