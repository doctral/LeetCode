/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {

    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    int size=0;
    ListNode head;
    public Solution(ListNode head) {
        ListNode copy=head;
        this.head=head;
        while(copy.next!=null){
            size++;
            copy=copy.next;
        }
        size++;
    }
    
    /** Returns a random node's value. */
    public int getRandom() {
        ListNode h=head;
        Random rand=new Random();
        int index=rand.nextInt(size);
        while(index>0){
            h=h.next;
            index--;
        }
        return h.val;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
