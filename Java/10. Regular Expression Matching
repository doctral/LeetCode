// Recursive method

public class Solution {
    public boolean isMatch(String s, String p) {
    // if p is null
        if(p.length()<1){
            return s.length()==0;
        }
        
        int m=s.length();
        int n=p.length();
        
    // if p's last digit is '*'     
        if(p.charAt(n-1)=='*'){
            // xxxxs, xxxs* or xxxx, xxxx.*
            if(m>0 &&(s.charAt(m-1)==p.charAt(n-2) ||p.charAt(n-2)=='.')){
                       // in case of aa, .*                 // in case of sss, s*
                return isMatch(s,p.substring(0,n-2)) || isMatch(s.substring(0,m-1),p);
                
            }
            else{
                       // in case of "", c*; xxx, xxc*
                return isMatch(s,p.substring(0,n-2));
            }
        }
        else{
            // if last letter is the same, then continue
            if(m>0 && (s.charAt(m-1)==p.charAt(n-1) || p.charAt(n-1)=='.')){
                return isMatch(s.substring(0,m-1),p.substring(0,n-1));
            }
            else{
            // otherwise, return false
                return false;
            }
        }
        
        
        
    }
}
